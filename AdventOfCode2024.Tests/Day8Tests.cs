namespace AdventOfCode2024.Tests;

public class Day8Tests
{
    private static readonly string PuzzleInput = File.ReadAllText("Day8.txt");

    public static IEnumerable<(string, int)> GetData()
    {
        yield return ("", 0);
        yield return ("""
                      .aa
                      """, 1);
        yield return ("""
                      .AA
                      """, 1);
        yield return ("""
                      .00
                      """, 1);
        yield return ("""
                      .bb
                      """, 1);
        yield return ("""
                      .aa.
                      """, 2);
        yield return ("""
                      ..a.a..
                      """, 2);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ..........
                      .....a....
                      ..........
                      ..........
                      ..........
                      ..........
                      """, 2);
        yield return ("""
                      .a.a..
                      """, 1);
        yield return ("""
                      .a.a.
                      """, 0);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ........a.
                      .....a....
                      ..........
                      ..........
                      ..........
                      ..........
                      """, 4);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ........a.
                      ..........
                      ..........
                      ..........
                      ..........
                      ..........
                      """, 1);
        yield return ("""
                      ..........
                      ....a.....
                      ........a.
                      ..........
                      ..........
                      """, 1);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ........b.
                      .....a....
                      ..........
                      ..........
                      ..........
                      ..........
                      """, 2);
        yield return ("""
                      .aa
                      .bb
                      """, 2);
        yield return ("""
                      .aa
                      bb.
                      """, 2);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ........a.
                      .....a....
                      ..........
                      ......A...
                      ..........
                      ..........
                      """, 4);
        yield return ("""
                      ............
                      ........0...
                      .....0......
                      .......0....
                      ....0.......
                      ......A.....
                      ............
                      ............
                      ........A...
                      .........A..
                      ............
                      ............
                      """, 14);
        yield return (PuzzleInput, 244);
    }

    [Test]
    [MethodDataSource(nameof(GetData))]
    public async Task GetAntinodeCount(string input, int expected)
    {
        await Assert.That(Day8.GetAntinodeCount(input)).IsEqualTo(expected);
    }

    public static IEnumerable<(string, int)> GetDataPart2()
    {
        yield return ("", 0);
        yield return ("aa", 2);
        yield return ("""
                      .aa
                      """, 3);
        yield return ("""
                      .AA
                      """, 3);
        yield return ("""
                      .00
                      """, 3);
        yield return ("""
                      .bb
                      """, 3);
        yield return ("""
                      .aa.
                      """, 4);
        yield return ("""
                      ..a.a..
                      """, 4);
        yield return ("""
                      a
                      .
                      a
                      .
                      .
                      .
                      .
                      """, 4);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ..........
                      .....a....
                      ..........
                      ..........
                      ..........
                      ..........
                      """, 5);
        yield return ("""
                      .a.a..
                      """, 3);
        yield return ("""
                      .a.a.
                      """, 2);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ........a.
                      .....a....
                      ..........
                      ..........
                      ..........
                      ..........
                      """, 8);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ........a.
                      ..........
                      ..........
                      ..........
                      ..........
                      ..........
                      """, 3);
        yield return ("""
                      ..........
                      ....a.....
                      ........a.
                      ..........
                      ..........
                      """, 3);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ........b.
                      .....a....
                      ..........
                      ..........
                      ..........
                      ..........
                      """, 5);
        yield return ("""
                      .aa
                      .bb
                      """, 6);
        yield return ("""
                      .aa
                      bb.
                      """, 6);
        yield return ("""
                      ..........
                      ..........
                      ..........
                      ....a.....
                      ........a.
                      .....a....
                      ..........
                      ......A...
                      ..........
                      ..........
                      """, 8);
        yield return ("""
                      ............
                      ........0...
                      .....0......
                      .......0....
                      ....0.......
                      ......A.....
                      ............
                      ............
                      ........A...
                      .........A..
                      ............
                      ............
                      """, 34);
        yield return (PuzzleInput, 912);
    }

    [Test]
    [MethodDataSource(nameof(GetDataPart2))]
    public async Task GetAntinodeCountPart2(string input, int expected)
    {
        await Assert.That(Day8.GetAntinodeCount(input, part2: true)).IsEqualTo(expected);
    }
}