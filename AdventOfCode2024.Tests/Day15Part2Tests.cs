namespace AdventOfCode2024.Tests;

public class Day15Part2Tests
{
    private static readonly string PuzzleInput = File.ReadAllText("Day15.txt");

    [Test]
    public async Task Should_expand_input_to_wider_input()
    {
        const string input = """
                             ##########
                             #..O..O.O#
                             #......O.#
                             #.OO..O.O#
                             #..O@..O.#
                             #O#..O...#
                             #O..O..O.#
                             #.OO.O.OO#
                             #....O...#
                             ##########

                             <vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^
                             vvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v
                             ><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<
                             <<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^
                             ^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><
                             ^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^
                             >^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^
                             <><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>
                             ^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>
                             v^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^
                             """;

        const string expected = """
                                ####################
                                ##....[]....[]..[]##
                                ##............[]..##
                                ##..[][]....[]..[]##
                                ##....[]@.....[]..##
                                ##[]##....[]......##
                                ##[]....[]....[]..##
                                ##..[][]..[]..[][]##
                                ##........[]......##
                                ####################

                                <vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^
                                vvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v
                                ><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<
                                <<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^
                                ^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><
                                ^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^
                                >^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^
                                <><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>
                                ^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>
                                v^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^
                                """;

        string actual = Day15Part2.WidenInput2X(input);

        await Assert.That(actual).IsEqualTo(expected);
    }

    [Test]
    // Initial state
    [Arguments(
        """
        ######
        ##..##
        ##[]##
        ##@.##
        ######

        ^
        """,
        0,
        """
        ######
        ##..##
        ##[]##
        ##@.##
        ######
        """)]
    // Moves up one
    [Arguments(
        """
        ######
        ##..##
        ##..##
        ##@.##
        ######

        ^
        """,
        1,
        """
        ######
        ##..##
        ##@.##
        ##..##
        ######
        """)]
    // Does not move up one due to wall
    [Arguments(
        """
        ######
        ##..##
        ###.##
        ##@.##
        ######

        ^
        """,
        1,
        """
        ######
        ##..##
        ###.##
        ##@.##
        ######
        """)]
    // Pushes box up one from left side
    [Arguments(
        """
        ######
        ##..##
        ##[]##
        ##@.##
        ######

        ^
        """,
        1,
        """
        ######
        ##[]##
        ##@.##
        ##..##
        ######
        """)]
    // Pushes box up one from right side
    [Arguments(
        """
        ######
        ##..##
        ##[]##
        ##.@##
        ######

        ^
        """,
        1,
        """
        ######
        ##[]##
        ##.@##
        ##..##
        ######
        """)]
    // Pushes box down one from left side
    [Arguments(
        """
        ######
        ##@.##
        ##[]##
        ##..##
        ######

        v
        """,
        1,
        """
        ######
        ##..##
        ##@.##
        ##[]##
        ######
        """)]
    // Pushes box down one from right side
    [Arguments(
        """
        ######
        ##.@##
        ##[]##
        ##..##
        ######

        v
        """,
        1,
        """
        ######
        ##..##
        ##.@##
        ##[]##
        ######
        """)]
    // Pushes box right one
    [Arguments(
        """
        ##########
        ##.@[]..##
        ##########

        >
        """,
        1,
        """
        ##########
        ##..@[].##
        ##########
        """)]
    // Pushes box left one
    [Arguments(
        """
        ##########
        ##..[]@.##
        ##########

        <
        """,
        1,
        """
        ##########
        ##.[]@..##
        ##########
        """)]
    // Pushes two boxes up one from left side
    [Arguments(
        """
        ######
        ##..##
        ##[]##
        ##[]##
        ##@.##
        ######

        ^
        """,
        1,
        """
        ######
        ##[]##
        ##[]##
        ##@.##
        ##..##
        ######
        """)]
    // Pushes two boxes up one from right side
    [Arguments(
        """
        ######
        ##..##
        ##[]##
        ##[]##
        ##.@##
        ######

        ^
        """,
        1,
        """
        ######
        ##[]##
        ##[]##
        ##.@##
        ##..##
        ######
        """)]
    // Pushes two boxes right one
    [Arguments(
        """
        ############
        ##.@[][]..##
        ############

        >
        """,
        1,
        """
        ############
        ##..@[][].##
        ############
        """)]
    // Pushes three boxes right one
    [Arguments(
        """
        ############
        ##@[][][].##
        ############

        >
        """,
        1,
        """
        ############
        ##.@[][][]##
        ############
        """)]
    // Does not push one box right one due to wall
    [Arguments(
        """
        ############
        ##@[]#...###
        ############

        >
        """,
        1,
        """
        ############
        ##@[]#...###
        ############
        """)]
    // Does not push three boxes right one due to wall
    [Arguments(
        """
        ############
        ##@[][][]###
        ############

        >
        """,
        1,
        """
        ############
        ##@[][][]###
        ############
        """)]
    // Pushes two diagonal (/) boxes up one - robot on left
    [Arguments(
        """
        ########
        ##....##
        ##..[]##
        ##.[].##
        ##.@..##
        ########

        ^
        """,
        1,
        """
        ########
        ##..[]##
        ##.[].##
        ##.@..##
        ##....##
        ########
        """)]
    // Pushes two diagonal (/) boxes up one - robot on right
    [Arguments(
        """
        ########
        ##....##
        ##..[]##
        ##.[].##
        ##..@.##
        ########

        ^
        """,
        1,
        """
        ########
        ##..[]##
        ##.[].##
        ##..@.##
        ##....##
        ########
        """)]
    // Pushes two diagonal (\) boxes up one - robot on left
    [Arguments(
        """
        ########
        ##....##
        ##[]..##
        ##.[].##
        ##.@..##
        ########

        ^
        """,
        1,
        """
        ########
        ##[]..##
        ##.[].##
        ##.@..##
        ##....##
        ########
        """)]
    // Pushes two diagonal (\) boxes up one - robot on right
    [Arguments(
        """
        ########
        ##....##
        ##[]..##
        ##.[].##
        ##..@.##
        ########

        ^
        """,
        1,
        """
        ########
        ##[]..##
        ##.[].##
        ##..@.##
        ##....##
        ########
        """)]
    // Pushes a triangle of boxes up one - robot on right
    [Arguments(
        """
        ##############
        ##..........##
        ##..........##
        ##...[][]...##
        ##....[]....##
        ##.....@....##
        ##############

        ^
        """,
        1,
        """
        ##############
        ##..........##
        ##...[][]...##
        ##....[]....##
        ##.....@....##
        ##..........##
        ##############
        """)]
    // Does not push a triangle of boxes up one - robot on right, wall on right
    [Arguments(
        """
        ##############
        ##..........##
        ##......#...##
        ##...[][]...##
        ##....[]....##
        ##.....@....##
        ##############

        ^
        """,
        1,
        """
        ##############
        ##..........##
        ##......#...##
        ##...[][]...##
        ##....[]....##
        ##.....@....##
        ##############
        """)]
    // Does not push a triangle of boxes up one - robot on left, wall on right
    [Arguments(
        """
        ##############
        ##..........##
        ##......#...##
        ##...[][]...##
        ##....[]....##
        ##....@.....##
        ##############

        ^
        """,
        1,
        """
        ##############
        ##..........##
        ##......#...##
        ##...[][]...##
        ##....[]....##
        ##....@.....##
        ##############
        """)]
    // Does not push a triangle of boxes up one - robot on right, wall on left
    [Arguments(
        """
        ##############
        ##..........##
        ##...#......##
        ##...[][]...##
        ##....[]....##
        ##.....@....##
        ##############

        ^
        """,
        1,
        """
        ##############
        ##..........##
        ##...#......##
        ##...[][]...##
        ##....[]....##
        ##.....@....##
        ##############
        """)]
    // Does not push a triangle of boxes up one - robot on left, wall on left
    [Arguments(
        """
        ##############
        ##..........##
        ##...#......##
        ##...[][]...##
        ##....[]....##
        ##....@.....##
        ##############

        ^
        """,
        1,
        """
        ##############
        ##..........##
        ##...#......##
        ##...[][]...##
        ##....[]....##
        ##....@.....##
        ##############
        """)]
    // Pushes a triangle of boxes up one - robot on left
    [Arguments(
        """
        ##############
        ##..........##
        ##..........##
        ##...[][]...##
        ##....[]....##
        ##....@.....##
        ##############

        ^
        """,
        1,
        """
        ##############
        ##..........##
        ##...[][]...##
        ##....[]....##
        ##....@.....##
        ##..........##
        ##############
        """)]
    // Does not push up triangle from bottom due to wall - robot and wall on left
    [Arguments(
        """
        ############
        ##........##
        ##..#[]...##
        ##..[][]..##
        ##...@....##
        ############

        ^
        """,
        1,
        """
        ############
        ##........##
        ##..#[]...##
        ##..[][]..##
        ##...@....##
        ############
        """)]
    // Does not push up triangle from bottom due to wall - robot and wall on right
    [Arguments(
        """
        ############
        ##........##
        ##...[]#..##
        ##..[][]..##
        ##....@...##
        ############

        ^
        """,
        1,
        """
        ############
        ##........##
        ##...[]#..##
        ##..[][]..##
        ##....@...##
        ############
        """)]
    // Does not push box up one due to wall - wall on left, robot on right
    [Arguments(
        """
        ######
        ##..##
        ###.##
        ##[]##
        ##.@##
        ######

        ^
        """,
        1,
        """
        ######
        ##..##
        ###.##
        ##[]##
        ##.@##
        ######
        """)]
    // Does not push box up one due to wall - wall on right, robot on right
    [Arguments(
        """
        ######
        ##..##
        ##.###
        ##[]##
        ##.@##
        ######

        ^
        """,
        1,
        """
        ######
        ##..##
        ##.###
        ##[]##
        ##.@##
        ######
        """)]
    // Does not push box up one due to wall - wall on left, robot on left
    [Arguments(
        """
        ######
        ##..##
        ###.##
        ##[]##
        ##@.##
        ######

        ^
        """,
        1,
        """
        ######
        ##..##
        ###.##
        ##[]##
        ##@.##
        ######
        """)]
    // Does not push box up one due to wall - wall on right, robot on left
    [Arguments(
        """
        ######
        ##..##
        ##.###
        ##[]##
        ##@.##
        ######

        ^
        """,
        1,
        """
        ######
        ##..##
        ##.###
        ##[]##
        ##@.##
        ######
        """)]
    // Pushes vertical row of boxes up without pushing adjacent rows up
    [Arguments(
        """
        ########
        ##....##
        ##[]..##
        ##[][]##
        ##..@.##
        ########

        ^
        """,
        1,
        """
        ########
        ##....##
        ##[][]##
        ##[]@.##
        ##....##
        ########
        """)]
    // Does not push diamond of boxes up due to wall - wall on right, robot on right
    [Arguments(
        """
        ########
        ##....##
        ##.[]###
        ##[][]##
        ##.[].##
        ##..@.##
        ########

        ^
        """,
        1,
        """
        ########
        ##....##
        ##.[]###
        ##[][]##
        ##.[].##
        ##..@.##
        ########
        """)]
    // Does not push diamond of boxes up due to wall - wall on left, robot on left
    [Arguments(
        """
        ########
        ##....##
        ###[].##
        ##[][]##
        ##.[].##
        ##.@..##
        ########

        ^
        """,
        1,
        """
        ########
        ##....##
        ###[].##
        ##[][]##
        ##.[].##
        ##.@..##
        ########
        """)]
    // Does not push diamond of boxes up due to wall - wall on right, robot on left
    [Arguments(
        """
        ########
        ##....##
        ##.[]###
        ##[][]##
        ##.[].##
        ##.@..##
        ########

        ^
        """,
        1,
        """
        ########
        ##....##
        ##.[]###
        ##[][]##
        ##.[].##
        ##.@..##
        ########
        """)]
    // Does not push diamond of boxes up due to wall - wall on left, robot on right
    [Arguments(
        """
        ########
        ##....##
        ###[].##
        ##[][]##
        ##.[].##
        ##..@.##
        ########

        ^
        """,
        1,
        """
        ########
        ##....##
        ###[].##
        ##[][]##
        ##.[].##
        ##..@.##
        ########
        """)]
    // Does not push taller diamond of boxes up due to wall - wall on left, robot on right
    [Arguments(
        """
        ########
        ##....##
        ###[].##
        ##[][]##
        ##[][]##
        ##.[].##
        ##..@.##
        ########

        ^
        """,
        1,
        """
        ########
        ##....##
        ###[].##
        ##[][]##
        ##[][]##
        ##.[].##
        ##..@.##
        ########
        """)]
    // Does not push even taller diamond of boxes up due to wall - wall on left, robot on right
    [Arguments(
        """
        ########
        ##....##
        ###[].##
        ##[][]##
        ##[][]##
        ##[][]##
        ##.[].##
        ##..@.##
        ########

        ^
        """,
        1,
        """
        ########
        ##....##
        ###[].##
        ##[][]##
        ##[][]##
        ##[][]##
        ##.[].##
        ##..@.##
        ########
        """)]
    // Example input
    [Arguments(
        """
        ##############
        ##......##..##
        ##..........##
        ##....[][]@.##
        ##....[]....##
        ##..........##
        ##############

        <vv<<^^<<^^
        """,
        11,
        """
        ##############
        ##...[].##..##
        ##...@.[]...##
        ##....[]....##
        ##..........##
        ##..........##
        ##############
        """)]
    // Larger example
    [Arguments(
        """
        ####################
        ##....[]....[]..[]##
        ##............[]..##
        ##..[][]....[]..[]##
        ##....[]@.....[]..##
        ##[]##....[]......##
        ##[]....[]....[]..##
        ##..[][]..[]..[][]##
        ##........[]......##
        ####################

        <vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^
        vvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v
        ><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<
        <<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^
        ^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><
        ^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^
        >^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^
        <><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>
        ^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>
        v^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^
        """,
        700,
        """
        ####################
        ##[].......[].[][]##
        ##[]...........[].##
        ##[]........[][][]##
        ##[]......[]....[]##
        ##..##......[]....##
        ##..[]............##
        ##..@......[].[][]##
        ##......[][]..[]..##
        ####################
        """)]
    public async Task Should_move_robot_in_accordance_with_instructions_and_available_space(string input, int tickCount, string expected)
    {
        var sut = new Day15Part2(input);

        for (int i = 1; i <= tickCount; i++)
        {
            sut.Tick();
        }

        await Assert.That(sut.ToString()).IsEqualTo(expected);
    }

    [Test]
    [Arguments("""
               ##########
               ##...[]...
               ##........
               """, 105)]
    [Arguments("""
               ####################
               ##[].......[].[][]##
               ##[]...........[].##
               ##[]........[][][]##
               ##[]......[]....[]##
               ##..##......[]....##
               ##..[]............##
               ##..@......[].[][]##
               ##......[][]..[]..##
               ####################
               """, 9021)]
    public async Task Should_return_sum_of_box_GPS_coordinates(string input, int expected)
    {
        await Assert.That(Day15.GetGpsSum(input.ToTwoDimensionalArray<char>())).IsEqualTo(expected);
    }

    [Test]
    public async Task Solves_part_2()
    {
        var sut = new Day15Part2(Day15Part2.WidenInput2X(PuzzleInput));

        while (sut.Moves.Count > 0)
        {
            sut.Tick();
        }

        int sum = sut.GetGpsSum();

        await Assert.That(sum).IsEqualTo(1392847);
    }
}