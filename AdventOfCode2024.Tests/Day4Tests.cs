namespace AdventOfCode2024.Tests;

public class Day4Tests
{
    [Test]
    [Arguments("""
               ....
               ....
               ....
               ....
               """, 0)]
    [Arguments("""
               XMAS
               ....
               ....
               ....
               """, 1)]
    [Arguments("""
               XMA.
               ....
               ....
               ....
               """, 0)]
    [Arguments("""
               SAMX
               ....
               ....
               ....
               """, 1)]
    [Arguments("""
               XMAS
               XMAS
               ....
               ....
               """, 2)]
    [Arguments("""
               XMASXMAS
               ........
               ........
               ........
               ........
               ........
               ........
               """, 2)]
    [Arguments("""
               SAMXSAMX
               ........
               ........
               ........
               ........
               ........
               ........
               """, 2)]
    [Arguments("""
               XMASSAMX
               ........
               ........
               ........
               ........
               ........
               ........
               ........
               """, 2)]
    [Arguments("""
               X...
               .M..
               ..A.
               ...S
               """, 1)]
    [Arguments("""
               ...X
               ..M.
               .A..
               S...
               """, 1)]
    [Arguments("""
               ...S
               ..A.
               .M..
               X...
               """, 1)]
    [Arguments("""
               S...
               .A..
               ..M.
               ...X
               """, 1)]
    [Arguments("""
               X..S
               .MA.
               .MA.
               X..S
               """, 2)]
    [Arguments("""
               X...
               M...
               A...
               S...
               """, 1)]
    [Arguments("""
               ...S
               ...A
               ...M
               ...X
               """, 1)]
    [Arguments("""
               XMASAMX
               .......
               .......
               .......
               .......
               .......
               .......
               """, 2)]
    [Arguments("""
               X......
               M......
               A......
               S......
               A......
               M......
               X......
               """, 2)]
    [Arguments("""
               MMMSXXMASM
               MSAMXMSMSA
               AMXSXMAAMM
               MSAMASMSMX
               XMASAMXAMM
               XXAMMXXAMA
               SMSMSASXSS
               SAXAMASAAA
               MAMMMXMMMM
               MXMXAXMASX
               """, 18)]
    [PuzzleInput("Day4.txt", 2633)]
    public async Task GetXmasCount(string input, int expected)
    {
        await Assert.That(Day4.GetXmasCount(input)).IsEqualTo(expected);
    }

    [Test]
    [Arguments("""
               M.S
               .A.
               M.S
               """, 1)]
    [Arguments("""
               S.S
               .A.
               M.M
               """, 1)]
    [Arguments("""
               S.M
               .A.
               S.M
               """, 1)]
    [Arguments("""
               M.M
               .A.
               S.S
               """, 1)]
    [Arguments("""
               MMMSXXMASM
               MSAMXMSMSA
               AMXSXMAAMM
               MSAMASMSMX
               XMASAMXAMM
               XXAMMXXAMA
               SMSMSASXSS
               SAXAMASAAA
               MAMMMXMMMM
               MXMXAXMASX
               """, 9)]
    [PuzzleInput("Day4.txt", 1936)]
    public async Task GetXShapedMasCount(string input, int expected)
    {
        await Assert.That(Day4.GetXShapedMasCount(input)).IsEqualTo(expected);
    }
}